version: "3"

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    command: ["./scripts/wait-for-it.sh", "db:5432", "--", "./scripts/start-up.sh"]
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - BACKEND_SECRET=${BACKEND_SECRET}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - TZ=Asia/Tehran
    depends_on:
      - db

  db:
    image: kartoza/postgis:12.0
    ports:
    - 5432:5432
    environment:
      - TZ=Asia/Tehran
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "0.0.0.0:80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro

  redis:
    restart: always
    image: redis:6.0.4-alpine
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: celery
    environment:
      - BACKEND_SECRET=${BACKEND_SECRET}
    command: bash -c 'python3 manage.py watch_celery'
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis

  flower:
    image: mher/flower
    container_name: flower_dev_vet
    command: flower --url_prefix=flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
    depends_on:
      - celery
      - redis
    
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
      - "/app/node_modules"
    ports:
      - "3000:3000"
    depends_on:
      - backend
      
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
    ports:
      - "8085:8081"
    depends_on:
          - "redis"
    
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /portainer_data:/data

volumes:
  staticfiles_root:
  portainer_data:
  postgis_data: {}
